{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { GlobalConstant } from '../shared/global-constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"ngx-ui-loader\";\nimport * as i5 from \"../services/snackbar.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/toolbar\";\nimport * as i11 from \"@angular/flex-layout/flex\";\nfunction ForgotPasswordComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ForgotPasswordComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid email address. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(formBuilder, userService, dialogRef, ngxService, snackbarService) {\n      this.formBuilder = formBuilder;\n      this.userService = userService;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.snackbarService = snackbarService;\n    }\n    ngOnInit() {\n      this.forgotPasswordForm = this.formBuilder.group({\n        email: [null, [Validators.required, Validators.pattern(GlobalConstant.emailRegex)]]\n      });\n    }\n    handleSubmit() {\n      if (this.forgotPasswordForm.invalid) {\n        this.snackbarService.openSnackBar('Please enter a valid email', GlobalConstant.error);\n        return;\n      }\n      this.ngxService.start();\n      const formData = this.forgotPasswordForm.value;\n      const data = {\n        email: formData.email\n      };\n      this.userService.forgotPassword(data).subscribe(res => {\n        this.ngxService.stop();\n        this.responseMessage = res?.message || 'Password reset email sent successfully.';\n        this.dialogRef.close();\n        this.snackbarService.openSnackBar(this.responseMessage, '');\n      }, error => {\n        this.ngxService.stop();\n        this.responseMessage = error.error?.message || GlobalConstant.genericError;\n        this.snackbarService.openSnackBar(this.responseMessage, GlobalConstant.error);\n      });\n    }\n  }\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.NgxUiLoaderService), i0.ɵɵdirectiveInject(i5.SnackbarService));\n  };\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"title-center\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"fill\", \"fxFlex\", \"\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"type\", \"email\"], [4, \"ngIf\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\", \"click\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Forgot Password?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"mat-form-field\", 6)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵtemplate(11, ForgotPasswordComponent_mat_error_11_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵtemplate(12, ForgotPasswordComponent_mat_error_12_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(13, \"mat-dialog-actions\", 9)(14, \"button\", 10);\n        i0.ɵɵtext(15, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ForgotPasswordComponent_Template_button_click_16_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵtext(17, \" Submit \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_2_0;\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.forgotPasswordForm.get(\"email\")) == null ? null : tmp_1_0.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.forgotPasswordForm.get(\"email\")) == null ? null : tmp_2_0.hasError(\"pattern\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", ctx.forgotPasswordForm.invalid);\n      }\n    },\n    dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i7.MatButton, i3.MatDialogClose, i3.MatDialogContent, i3.MatDialogActions, i8.MatError, i8.MatFormField, i8.MatLabel, i9.MatInput, i10.MatToolbar, i10.MatToolbarRow, i11.DefaultLayoutDirective, i11.DefaultFlexDirective]\n  });\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}